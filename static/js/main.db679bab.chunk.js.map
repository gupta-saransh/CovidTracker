{"version":3,"sources":["api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.module.css","images/image.png"],"names":["url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","spacing","justify","infected","App","state","setState","this","image","src","alt","Cards","CountryPicker","copy","href","web","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.db679bab.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, {\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\nimport {\r\n  Line,\r\n  Bar\r\n} from 'react-chartjs-2';\r\n\r\nimport {\r\n  fetchDailyData\r\n} from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({\r\n  data: {\r\n    confirmed,\r\n    recovered,\r\n    deaths\r\n  },\r\n  country\r\n}) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? ( <\r\n      Bar data = {\r\n        {\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          }, ],\r\n        }\r\n      }\r\n      options = {\r\n        {\r\n          legend: {\r\n            display: false\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: `Current state in ${country}`\r\n          },\r\n        }\r\n      }\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? ( <\r\n      Line data = {\r\n        {\r\n          labels: dailyData.map(({\r\n            date\r\n          }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            //backgroundColor: 'rgba(0, 0, 255, 0.5)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          }, ],\r\n        }\r\n      }\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return ( <\r\n    div className = {\r\n      styles.container\r\n    } > {\r\n      country ? barChart : lineChart\r\n    } <\r\n    /div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardComponent;\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <CardComponent\r\n          className={styles.infected}\r\n          cardTitle=\"Infected\"\r\n          value={confirmed.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of active cases from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.recovered}\r\n          cardTitle=\"Recovered\"\r\n          value={recovered.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.deaths}\r\n          cardTitle=\"Deaths\"\r\n          value={deaths.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React from 'react';\r\n\r\nimport {\r\n  Cards,\r\n  CountryPicker,\r\n  Chart\r\n} from './components';\r\nimport {\r\n  fetchData\r\n} from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({\r\n      data\r\n    });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({\r\n      data,\r\n      country: country\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      country\r\n    } = this.state;\r\n\r\n    return ( <\r\n      div className = {\r\n        styles.container\r\n      } >\r\n\r\n      <\r\n      img className = {\r\n        styles.image\r\n      }\r\n      src = {\r\n        image\r\n      }\r\n      alt = \"COVID-19\" / >\r\n      <\r\n      Cards data = {\r\n        data\r\n      }\r\n      /> <\r\n      CountryPicker handleCountryChange = {\r\n        this.handleCountryChange\r\n      }\r\n      /> <\r\n      Chart data = {\r\n        data\r\n      }\r\n      country = {\r\n        country\r\n      }\r\n      /> <\r\n      div > < /div> <\r\n      div className = {\r\n        styles.copy\r\n      } >\r\n      Developed By < a href = \"https://saranshgupta.tech\"\r\n      className = {\r\n        styles.web\r\n      }\r\n      target = \"_blank\" > Saransh Gupta < /a> < /\r\n      div > <\r\n      /div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1FXzY\",\"infected\":\"Cards_infected__3y0F6\",\"recovered\":\"Cards_recovered__3ODjh\",\"deaths\":\"Cards_deaths__BlSeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3BzEE\",\"image\":\"App_image__2rArB\",\"copy\":\"App_copy__mV8op\",\"web\":\"App_web__2AAwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3Y4xk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__lHS4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1gAzO\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}